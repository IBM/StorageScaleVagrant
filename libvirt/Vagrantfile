# -*- mode: ruby -*-
# vi: set ft=ruby :

#
# Create single node Storage Scale cluster
#

$message = <<EOT
--------------------------------------------------------------------------

Created virtual environment for IBM Storage Scale.

User Guide:
https://github.com/IBM/SpectrumScaleVagrant/blob/master/README.md

To logon on the management node execute:
vagrant ssh

To connect to the Storage Scale GUI, in a web browser:
https://localhost:8888

--------------------------------------------------------------------------
EOT


# Set provider
$SpectrumScaleVagrant_provider = 'libvirt'


# Load common settings
load File.expand_path('../../shared/Vagrantfile.common', __FILE__)

# Customize configuration specific settings
Vagrant.configure("2") do |config|

  # Use the Vagrant box prepared for Storage Scale
  config.vm.box     = "SpectrumScale_base"
  # config.vm.box_url = "./prep-box/SpectrumScale_base.box"

  # Customize resources of virtual machines
  config.vm.provider "libvirt" do |libvirt|
    libvirt.qemu_use_session = false
    libvirt.memory = 8192
    libvirt.cpus = 2
  end
  config.ssh.forward_agent = true
  config.ssh.insert_key = false
  #config.hostmanager.enabled = true

  #
  # The single node cluster comprises one node only
  #

  config.vm.define "m1", primary: true do |node|
    node.vm.hostname = "m1.example.com"
    # Management network
    node.vm.network "private_network", ip: "10.1.1.11"
    # Data transfer network
    node.vm.network "private_network", ip: "10.1.2.11"
    # CES network
    node.vm.network "private_network", ip: "192.168.56.11"
    node.vm.network "forwarded_port", guest: 443, host: 8888

    # Attach five disks for Storage Scale NSDs
    node.vm.provider "libvirt" do |libvirt|
      # 5 small disks
      # 3 disks will be allocated to fs1, system pool, single failure group
      # 2 disks will be allocated to cesShared, system pool, fg1
      small = 5
      (1..small).each do |disk|
        libvirt.storage :file, :size => '4G', :cache => 'none'
      end
      # 2 large disks, will be allocated to fs1 capacity pool
      large = 2
      (small+1..small+large).each do |disk|
        libvirt.storage :file, :size => '6G'
      end
    end

    # Set message to be printed after VMs are up and running
    config.vm.post_up_message = $message

    # Sync Storage Scale install package to admin node
    config.vm.synced_folder "../software", "/software", type: "rsync"

    # Install and configure single node Storage Scale cluster
    node.vm.provision "shell",
      name:   "Install and configure single node Storage Scale cluster",
      inline: "
        /vagrant/install/script.sh #{$SpectrumScaleVagrant_provider} #{$SpectrumScale_version}
      "

    # Configure Storage Scale for demo purposes
    node.vm.provision "shell",
      name:   "Configure Storage Scale for demo purposes",
      inline: "
        /vagrant/demo/script.sh #{$SpectrumScaleVagrant_provider}
      "
  end
end
